# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - rockaway-cphdevfest-2024

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build Rockaway --configuration Release

      - name: test with dotnet
        run: dotnet test Rockaway --configuration Release

      - name: dotnet publish
        run: dotnet publish Rockaway/Rockaway.WebApp/ --configuration Release --output ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      - name: Migrate SQL database
        run: dotnet Rockaway.WebApp.dll -- --e ConnectionStrings:AZURE_SQL_CONNECTIONSTRING="${{ secrets.AZURE_SQL_CONNECTIONSTRING }}" apply-migrations=true
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'rockaway-cphdevfest-2024'
          slot-name: 'staging'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_896ABF9947ED44EFAA62A6C28005732F }}
      - name: Check Staging Status
        id: check_staging
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://rockaway-cphdevfest2024-staging.azurewebsites.net/status)
          if [ "$response" != "200" ]; then
            echo "Staging environment is not OK. Status code: $response"
            exit 1
          fi
          echo "Staging environment is OK."
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Slots
        if: steps.check_staging.outcome == 'success'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap \
              --resource-group rockaway-cphdevfest2024-resource-group \
              --name rockaway-cphdevfest-2024 \
              --slot staging \
              --target-slot production

